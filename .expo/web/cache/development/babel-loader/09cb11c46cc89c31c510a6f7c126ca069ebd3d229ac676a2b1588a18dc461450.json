{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPublicInstance = createPublicInstance;\nexports.createPublicTextInstance = createPublicTextInstance;\nexports.getNativeTagFromPublicInstance = getNativeTagFromPublicInstance;\nexports.getNodeFromPublicInstance = getNodeFromPublicInstance;\nvar _ReactNativeFeatureFlags = _interopRequireDefault(require(\"../ReactNativeFeatureFlags\"));\nvar PublicInstanceClass;\nvar ReadOnlyTextClass;\nvar ReactFabric;\nfunction createPublicInstance(tag, viewConfig, internalInstanceHandle) {\n  if (PublicInstanceClass == null) {\n    if (_ReactNativeFeatureFlags.default.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass = require('../../DOM/Nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\nfunction createPublicTextInstance(internalInstanceHandle) {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass = require('../../DOM/Nodes/ReadOnlyText').default;\n  }\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\nfunction getNativeTagFromPublicInstance(publicInstance) {\n  return publicInstance.__nativeTag;\n}\nfunction getNodeFromPublicInstance(publicInstance) {\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n  if (ReactFabric == null) {\n    ReactFabric = require('../../Renderer/shims/ReactFabric');\n  }\n  return ReactFabric.getNodeFromInternalInstanceHandle(publicInstance.__internalInstanceHandle);\n}","map":{"version":3,"names":["_ReactNativeFeatureFlags","_interopRequireDefault","require","PublicInstanceClass","ReadOnlyTextClass","ReactFabric","createPublicInstance","tag","viewConfig","internalInstanceHandle","ReactNativeFeatureFlags","enableAccessToHostTreeInFabric","default","createPublicTextInstance","getNativeTagFromPublicInstance","publicInstance","__nativeTag","getNodeFromPublicInstance","__internalInstanceHandle","getNodeFromInternalInstanceHandle"],"sources":["D:/IT/react native/crud_project/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReactNativeElement from '../../DOM/Nodes/ReactNativeElement';\nimport type ReadOnlyText from '../../DOM/Nodes/ReadOnlyText';\nimport typeof ReactFabricType from '../../Renderer/shims/ReactFabric';\nimport type {\n  InternalInstanceHandle,\n  Node,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type ReactFabricHostComponent from './ReactFabricHostComponent';\n\nimport ReactNativeFeatureFlags from '../ReactNativeFeatureFlags';\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet PublicInstanceClass:\n  | Class<ReactFabricHostComponent>\n  | Class<ReactNativeElement>;\nlet ReadOnlyTextClass: Class<ReadOnlyText>;\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet ReactFabric: ReactFabricType;\n\nexport function createPublicInstance(\n  tag: number,\n  viewConfig: ViewConfig,\n  internalInstanceHandle: InternalInstanceHandle,\n): ReactFabricHostComponent | ReactNativeElement {\n  if (PublicInstanceClass == null) {\n    // We don't use inline requires in react-native, so this forces lazy loading\n    // the right module to avoid eagerly loading both.\n    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass =\n        require('../../DOM/Nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\n\nexport function createPublicTextInstance(\n  internalInstanceHandle: InternalInstanceHandle,\n): ReadOnlyText {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass = require('../../DOM/Nodes/ReadOnlyText').default;\n  }\n\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\n\nexport function getNativeTagFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): number {\n  return publicInstance.__nativeTag;\n}\n\nexport function getNodeFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): ?Node {\n  // Avoid loading ReactFabric if using an instance from the legacy renderer.\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n\n  if (ReactFabric == null) {\n    ReactFabric = require('../../Renderer/shims/ReactFabric');\n  }\n  return ReactFabric.getNodeFromInternalInstanceHandle(\n    publicInstance.__internalInstanceHandle,\n  );\n}\n"],"mappings":";;;;;;;;AAoBA,IAAAA,wBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAIC,mBAEyB;AAC7B,IAAIC,iBAAsC;AAG1C,IAAIC,WAA4B;AAEzB,SAASC,oBAAoBA,CAClCC,GAAW,EACXC,UAAsB,EACtBC,sBAA8C,EACC;EAC/C,IAAIN,mBAAmB,IAAI,IAAI,EAAE;IAG/B,IAAIO,gCAAuB,CAACC,8BAA8B,CAAC,CAAC,EAAE;MAC5DR,mBAAmB,GACjBD,OAAO,CAAC,oCAAoC,CAAC,CAACU,OAAO;IACzD,CAAC,MAAM;MACLT,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC,CAACU,OAAO;IACrE;EACF;EAEA,OAAO,IAAIT,mBAAmB,CAACI,GAAG,EAAEC,UAAU,EAAEC,sBAAsB,CAAC;AACzE;AAEO,SAASI,wBAAwBA,CACtCJ,sBAA8C,EAChC;EACd,IAAIL,iBAAiB,IAAI,IAAI,EAAE;IAC7BA,iBAAiB,GAAGF,OAAO,CAAC,8BAA8B,CAAC,CAACU,OAAO;EACrE;EAEA,OAAO,IAAIR,iBAAiB,CAACK,sBAAsB,CAAC;AACtD;AAEO,SAASK,8BAA8BA,CAC5CC,cAA6D,EACrD;EACR,OAAOA,cAAc,CAACC,WAAW;AACnC;AAEO,SAASC,yBAAyBA,CACvCF,cAA6D,EACtD;EAEP,IAAIA,cAAc,CAACG,wBAAwB,IAAI,IAAI,EAAE;IACnD,OAAO,IAAI;EACb;EAEA,IAAIb,WAAW,IAAI,IAAI,EAAE;IACvBA,WAAW,GAAGH,OAAO,CAAC,kCAAkC,CAAC;EAC3D;EACA,OAAOG,WAAW,CAACc,iCAAiC,CAClDJ,cAAc,CAACG,wBACjB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}