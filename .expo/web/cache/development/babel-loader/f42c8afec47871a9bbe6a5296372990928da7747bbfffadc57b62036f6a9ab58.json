{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;\nvar _codegenNativeCommands = _interopRequireDefault(require(\"../../Utilities/codegenNativeCommands\"));\nvar _codegenNativeComponent = _interopRequireDefault(require(\"../../Utilities/codegenNativeComponent\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nvar _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),\n  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;\nvar _require2 = require(\"react-native/Libraries/ReactNative/RendererProxy\"),\n  dispatchCommand = _require2.dispatchCommand;\nvar nativeComponentName = 'RCTRefreshControl';\nvar __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: 'RCTRefreshControl',\n  directEventTypes: {\n    topRefresh: {\n      registrationName: 'onRefresh'\n    }\n  },\n  validAttributes: Object.assign({\n    tintColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    titleColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    title: true,\n    progressViewOffset: true,\n    refreshing: true\n  }, ConditionallyIgnoredEventHandlers({\n    onRefresh: true\n  }))\n};\nvar _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\nvar Commands = exports.Commands = {\n  setNativeRefreshing: function setNativeRefreshing(ref, refreshing) {\n    dispatchCommand(ref, \"setNativeRefreshing\", [refreshing]);\n  }\n};","map":{"version":3,"names":["_codegenNativeCommands","_interopRequireDefault","require","_codegenNativeComponent","React","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","NativeComponentRegistry","_require","ConditionallyIgnoredEventHandlers","_require2","dispatchCommand","nativeComponentName","__INTERNAL_VIEW_CONFIG","exports","uiViewClassName","directEventTypes","topRefresh","registrationName","validAttributes","assign","tintColor","process","titleColor","title","progressViewOffset","refreshing","onRefresh","_default","Commands","setNativeRefreshing","ref"],"sources":["D:/IT/react native/crud_project/node_modules/react-native/Libraries/Components/RefreshControl/PullToRefreshViewNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The color of the refresh indicator.\n   */\n  tintColor?: ?ColorValue,\n  /**\n   * Title color.\n   */\n  titleColor?: ?ColorValue,\n  /**\n   * The title displayed under the refresh indicator.\n   */\n  title?: WithDefault<string, null>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<ComponentType>,\n    refreshing: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}