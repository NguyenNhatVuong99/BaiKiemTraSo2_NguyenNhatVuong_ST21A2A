{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _RCTNetworking = _interopRequireDefault(require(\"../../Network/RCTNetworking\"));\nvar _HMRClient = _interopRequireDefault(require(\"../../Utilities/HMRClient\"));\nvar _LoadingView = _interopRequireDefault(require(\"../../Utilities/LoadingView\"));\nvar _getDevServer2 = _interopRequireDefault(require(\"./getDevServer\"));\nvar pendingRequests = 0;\nvar cachedPromisesByUrl = new Map();\nfunction asyncRequest(url) {\n  var id = null;\n  var responseText = null;\n  var headers = null;\n  var dataListener;\n  var completeListener;\n  var responseListener;\n  var incrementalDataListener;\n  return new Promise(function (resolve, reject) {\n    dataListener = _RCTNetworking.default.addListener('didReceiveNetworkData', function (_ref) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        requestId = _ref2[0],\n        response = _ref2[1];\n      if (requestId === id) {\n        responseText = response;\n      }\n    });\n    incrementalDataListener = _RCTNetworking.default.addListener('didReceiveNetworkIncrementalData', function (_ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n        requestId = _ref4[0],\n        data = _ref4[1];\n      if (requestId === id) {\n        if (responseText != null) {\n          responseText += data;\n        } else {\n          responseText = data;\n        }\n      }\n    });\n    responseListener = _RCTNetworking.default.addListener('didReceiveNetworkResponse', function (_ref5) {\n      var _ref6 = (0, _slicedToArray2.default)(_ref5, 3),\n        requestId = _ref6[0],\n        status = _ref6[1],\n        responseHeaders = _ref6[2];\n      if (requestId === id) {\n        headers = responseHeaders;\n      }\n    });\n    completeListener = _RCTNetworking.default.addListener('didCompleteNetworkResponse', function (_ref7) {\n      var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n        requestId = _ref8[0],\n        error = _ref8[1];\n      if (requestId === id) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve({\n            body: responseText,\n            headers: headers\n          });\n        }\n      }\n    });\n    _RCTNetworking.default.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, function (requestId) {\n      id = requestId;\n    }, true);\n  }).finally(function () {\n    var _dataListener, _completeListener, _responseListener, _incrementalDataListe;\n    (_dataListener = dataListener) == null ? void 0 : _dataListener.remove();\n    (_completeListener = completeListener) == null ? void 0 : _completeListener.remove();\n    (_responseListener = responseListener) == null ? void 0 : _responseListener.remove();\n    (_incrementalDataListe = incrementalDataListener) == null ? void 0 : _incrementalDataListe.remove();\n  });\n}\nfunction buildUrlForBundle(bundlePathAndQuery) {\n  var _getDevServer = (0, _getDevServer2.default)(),\n    serverUrl = _getDevServer.url;\n  return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n}\nmodule.exports = function (bundlePathAndQuery) {\n  var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n  var loadPromise = cachedPromisesByUrl.get(requestUrl);\n  if (loadPromise) {\n    return loadPromise;\n  }\n  _LoadingView.default.showMessage('Downloading...', 'load');\n  ++pendingRequests;\n  loadPromise = asyncRequest(requestUrl).then(function (_ref9) {\n    var body = _ref9.body,\n      headers = _ref9.headers;\n    if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n      throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n    }\n    _HMRClient.default.registerBundle(requestUrl);\n    if (global.globalEvalWithSourceUrl) {\n      global.globalEvalWithSourceUrl(body, requestUrl);\n    } else {\n      eval(body);\n    }\n  }).catch(function (e) {\n    cachedPromisesByUrl.delete(requestUrl);\n    throw e;\n  }).finally(function () {\n    if (! --pendingRequests) {\n      _LoadingView.default.hide();\n    }\n  });\n  cachedPromisesByUrl.set(requestUrl, loadPromise);\n  return loadPromise;\n};","map":{"version":3,"names":["_RCTNetworking","_interopRequireDefault","require","_HMRClient","_LoadingView","_getDevServer2","pendingRequests","cachedPromisesByUrl","Map","asyncRequest","url","id","responseText","headers","dataListener","completeListener","responseListener","incrementalDataListener","Promise","resolve","reject","Networking","addListener","_ref","_ref2","_slicedToArray2","default","requestId","response","_ref3","_ref4","data","_ref5","_ref6","status","responseHeaders","_ref7","_ref8","error","body","sendRequest","finally","_dataListener","_completeListener","_responseListener","_incrementalDataListe","remove","buildUrlForBundle","bundlePathAndQuery","_getDevServer","getDevServer","serverUrl","replace","module","exports","requestUrl","loadPromise","get","LoadingView","showMessage","then","_ref9","indexOf","Error","JSON","parse","message","HMRClient","registerBundle","global","globalEvalWithSourceUrl","eval","catch","e","delete","hide","set"],"sources":["D:/IT/react native/crud_project/node_modules/react-native/Libraries/Core/Devtools/loadBundleFromServer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport Networking from '../../Network/RCTNetworking';\nimport HMRClient from '../../Utilities/HMRClient';\nimport LoadingView from '../../Utilities/LoadingView';\nimport getDevServer from './getDevServer';\n\ndeclare var global: {globalEvalWithSourceUrl?: (string, string) => mixed, ...};\n\nlet pendingRequests = 0;\n\nconst cachedPromisesByUrl = new Map<string, Promise<void>>();\n\nfunction asyncRequest(\n  url: string,\n): Promise<{body: string, headers: {[string]: string}}> {\n  let id = null;\n  let responseText = null;\n  let headers = null;\n  let dataListener;\n  let completeListener;\n  let responseListener;\n  let incrementalDataListener;\n  return new Promise<{body: string, headers: {[string]: string}}>(\n    (resolve, reject) => {\n      dataListener = Networking.addListener(\n        'didReceiveNetworkData',\n        ([requestId, response]) => {\n          if (requestId === id) {\n            responseText = response;\n          }\n        },\n      );\n      incrementalDataListener = Networking.addListener(\n        'didReceiveNetworkIncrementalData',\n        ([requestId, data]) => {\n          if (requestId === id) {\n            if (responseText != null) {\n              responseText += data;\n            } else {\n              responseText = data;\n            }\n          }\n        },\n      );\n      responseListener = Networking.addListener(\n        'didReceiveNetworkResponse',\n        ([requestId, status, responseHeaders]) => {\n          if (requestId === id) {\n            headers = responseHeaders;\n          }\n        },\n      );\n      completeListener = Networking.addListener(\n        'didCompleteNetworkResponse',\n        ([requestId, error]) => {\n          if (requestId === id) {\n            if (error) {\n              reject(error);\n            } else {\n              //$FlowFixMe[incompatible-call]\n              resolve({body: responseText, headers});\n            }\n          }\n        },\n      );\n      Networking.sendRequest(\n        'GET',\n        'asyncRequest',\n        url,\n        {},\n        '',\n        'text',\n        true,\n        0,\n        requestId => {\n          id = requestId;\n        },\n        true,\n      );\n    },\n  ).finally(() => {\n    dataListener?.remove();\n    completeListener?.remove();\n    responseListener?.remove();\n    incrementalDataListener?.remove();\n  });\n}\n\nfunction buildUrlForBundle(bundlePathAndQuery: string) {\n  const {url: serverUrl} = getDevServer();\n  return (\n    serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '')\n  );\n}\n\nmodule.exports = function (bundlePathAndQuery: string): Promise<void> {\n  const requestUrl = buildUrlForBundle(bundlePathAndQuery);\n  let loadPromise = cachedPromisesByUrl.get(requestUrl);\n\n  if (loadPromise) {\n    return loadPromise;\n  }\n  LoadingView.showMessage('Downloading...', 'load');\n  ++pendingRequests;\n\n  loadPromise = asyncRequest(requestUrl)\n    .then<void>(({body, headers}) => {\n      if (\n        headers['Content-Type'] != null &&\n        headers['Content-Type'].indexOf('application/json') >= 0\n      ) {\n        // Errors are returned as JSON.\n        throw new Error(\n          JSON.parse(body).message ||\n            `Unknown error fetching '${bundlePathAndQuery}'`,\n        );\n      }\n\n      HMRClient.registerBundle(requestUrl);\n\n      // Some engines do not support `sourceURL` as a comment. We expose a\n      // `globalEvalWithSourceUrl` function to handle updates in that case.\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        // eslint-disable-next-line no-eval\n        eval(body);\n      }\n    })\n    .catch<void>(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    })\n    .finally(() => {\n      if (!--pendingRequests) {\n        LoadingView.hide();\n      }\n    });\n\n  cachedPromisesByUrl.set(requestUrl, loadPromise);\n  return loadPromise;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}